<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</head>

<style>   
    .form-div {
        margin: 50px;
        width: 40%;
        padding: 0px 20px;
    }

    .book-div {
        margin: 50px;
    }
</style>
<body>
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container">
          <a class="navbar-brand" href="/">Library</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="/">Home</a>
              </li>
              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="/api/books">Books</a>
              </li>
              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="/api/users">Users</a>
              </li>
              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="#">About Us</a>
              </li>
              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="#">Contact</a>
              </li>
            </ul>
            <div class="d-flex">
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                      Welcome <%= loggedInUser.username %>
                    </a>
                    <ul class="dropdown-menu">
                      <li><a class="dropdown-item" href="#">My Profile</a></li>
                      <li><a class="dropdown-item" href="/api/mybooks">My Books</a></li>
                      <li><a href="#" class="dropdown-item" id="deleteAccount">Delete Account</a></li>
                      <li><hr class="dropdown-divider"></li>
                      <li><a class="dropdown-item" href="/api/users/logout">Logout</a></li>
                    </ul>
                </div>
            </div>
          </div>
        </div>
    </nav>
    <div class="book-div">
        <div class="book-thumbnail">
            <img src="<%= book.thumbnail %>" alt="Thumbnail not available">
        </div>
        <div class="book-info">
            <h4><%= book.title %></h4>
            <h6>by <%= book.author %></h6>
            <p><%= book.description %></p>
            <p><%= book.quantity %> books available</p>
        </div>
    </div>
    
    <div class="form-div">
        <form onsubmit="updateBook('<%= book._id %>'); return false;">
            <div class="mb-3 row">
                <label for="title" class="col-sm-2 col-form-label">Title:</label>
                <div class="col-sm-10">
                    <input type="text" id="title" name="title" value="<%= book.title %>" class="form-control">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="author" class="col-sm-2 col-form-label">Author:</label>
                <div class="col-sm-10">
                    <input type="text" id="author" name="author" value="<%= book.author %>" class="form-control">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="description" class="col-sm-2 col-form-label">Description:</label>
                <div class="col-sm-10">
                    <input type="text" id="description" name="description" value="<%= book.description %>" class="form-control">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="thumbnail" class="col-sm-2 col-form-label">Thumbnail:</label>
                <div class="col-sm-10">
                    <input type="text" id="thumbnail" name="thumbnail" value="<%= book.thumbnail %>" class="form-control">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="quantity" class="col-sm-2 col-form-label">Quantity:</label>
                <div class="col-sm-10">
                    <input type="number" id="quantity" name="quantity" value="<%= book.quantity %>" class="form-control">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="maxQuantity" class="col-sm-2 col-form-label">Max Quantity:</label>
                <div class="col-sm-10">
                    <input type="number" id="maxQuantity" name="maxQuantity" value="<%= book.maxQuantity %>" class="form-control">
                </div>
            </div>
            <div class="mb-3 row">
                <div class="col-sm-10 offset-sm-2">
                    <button type="submit" class="btn btn-info">Update Book</button>
                </div>
            </div>
        </form>
    </div>
    
    <button class="btn btn-danger ms-5 mb-5" onclick="deleteBook('<%= book._id %>')">Delete</button>
    <button class="btn btn-success ms-5 mb-5" onclick="borrowBook('<%= book._id %>')">Borrow</button>
</body>

<script>
    async function updateBook(bookId) {
        // const updatedData = document.getElementById(`book-info-${bookId}`).value;
        // const [title, author, quantity] = updatedData.trim().split(', ');
        // console.log(title, author, quantity);
        const title = document.getElementById('title').value;
        const author = document.getElementById('author').value;
        const description = document.getElementById('description').value;
        const quantity = document.getElementById('quantity').value;
        const maxQuantity = document.getElementById('maxQuantity').value;
        const thumbnail = document.getElementById('thumbnail').value;
        const response = await fetch(`/api/books/${bookId}`, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: title,
                author: author,
                description: description,
                thumbnail: thumbnail,
                quantity: quantity,
                maxQuantity: maxQuantity
            })
        });

        if (response.ok) {
            // Optionally, refresh the page or remove the user from the DOM
            alert('Book updated successfully');
            location.reload(); // Reload the page to reflect changes
        } else {
            const error = await response.json();
            alert(`Error updating book: ${error.message}`);
        }
    }

    async function deleteBook(bookId) {
        const response = await fetch(`/api/books/${bookId}`, {
            method: 'DELETE'
        });

        if (response.ok) {
            // Optionally, refresh the page or remove the user from the DOM
            alert('Book deleted successfully');
            location.reload(); // Reload the page to reflect changes
        } else {
            const error = await response.json();
            alert(`Error deleting book: ${error.message}`);
        }
    }

    async function borrowBook(bookId) {
        const response = await fetch(`/api/mybooks/borrow/${bookId}`, {
            method: 'POST'
        });

        if (response.ok) {
            // Optionally, refresh the page or remove the user from the DOM
            alert('Book borrowed successfully');
            location.reload(); // Reload the page to reflect changes
        } else {
            const error = await response.json();
            alert(`Error borrowing book: ${error.message}`);
        }
    }

    document.getElementById('deleteAccount').addEventListener('click', function(event) {
        event.preventDefault();
        
        const userId = '<%= loggedInUser._id %>';
        const url = `/api/users/${userId}`;
        
        if (confirm('Are you sure you want to delete your account?')) {
            fetch(url, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    alert('Account deleted successfully');
                    window.location.href = '/'; // Redirect to home or another page after deletion
                } else {
                    alert('Failed to delete account');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    });
</script>
</html>